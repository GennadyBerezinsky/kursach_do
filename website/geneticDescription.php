Генетичний алгоритм це в першу чергу еволюційний алгоритм, що заснований на схрещуванні(комбінуванні). Шляхом перебору та відбору отримаємо правильну комбінацію. Алгоритм поділяється на три етапи:<br>
<ul>
    <li>Схрещування</li>
    <li>Селекція(відбір)</li>
    <li>Формування нового покоління</li>
</ul>
Якщо результат нас не влаштовує, кроки повторюються допоки результат нас не влаштує або якщо кількість поколінь(повторів) досягне свого максимуму.<br>
Опис алгоритму:<br>
<ul>
    <li>
        Випадковим чином генерується кінцевий набір готових рішень:
        <img src="img/genetic1.png"><br>
    </li>
    <li>
        Оцінка пристосовуваності поточного покоління
        <img src="img/genetic2.png"><br>
    </li>

    <li>
        Вихід, якщо виконується критерій зупинки.
    </li>
    <li>
        Генерація нового покоління S, схрещуючи C та мутацій
        <img src="img/genetic3.png"><br>
        та перехід до пункту 2 в іншому випадку.
        В процесі селекції відбираються лише декілька кращих пробних рішень, інші далі не використовуються. Схрещування за місце пари рішень створює іншу, елементи якої перемішані випадковим чином. Мутація випадковим чином змінює певну компоненту рішення на нуль.
    </li>
</ul>
<b>Опис алгоритму:</b><br>
Вхід: А – матриця сумісності тварин<br>
m – розмір початкової популяції<br>
α – ймовірність мутації<br>
F – умова завершення, впродовж 20 ітерацій алгоритм не призводив до покращення розв’язку<br>
<b>Крок 1.</b> Генерація початкової популяції<br>
На першому кроці генерується популяція з m членів, в якій тварини, що входять до неї обираються ввипадковим чином. Алгорим перевіряє популяцію та визначає членів, які не задовільняють умові.<br>
while не виконується F do<br>
<b>Крок 2.</b> Обрати батьків.<br>
Для вибору батьків скористаємося турнірним методом, в якому кожному популяція буде поділена на дві частини випадковим чином. Кожному члену буде присвоєно номер команди (1 або 2). З кожної команди буде обрано одного найкращого представника. Так, у результаті ми матимемо двох батьків та можемо переходити до створення нащадків.<br>
<b>Крок 3.</b> Схрещення.<br>
На етапі схрещення отриманих у попередньому кроці батьків ми застосуємо одноточковий кросинговер. Для цього визначимо опорну точку кросинговеру, поділивши порівну гени на дві частини. Далі формуємо двох нащадків. Випадковим чином обирається точка кросинговеру. Перший нащадок отримає гени першого батька по ліву частину точки та другого по праву, другий- праву частину першого та ліву другого.<br>
<b>Крок 4.</b> Мутації.<br>
На цьому етапі, з певною ймовірністю з кожним отриманим нащадком може відбутися мутація. Використаємо одноточковий оператор мутації. Приймемо ймовірність мутації за 0,1. При мутації, випадковий ген нащадка змінює своє значення.<br>
<b>Крок 5.</b> Локальне покращення(Реанімація)<br>
Якщо один з нащадків виявився непридатним, спробуємо зробити реанімацію. Оцінимо, які тварина конфліктують одна з одною. Оцінимо, з якою кількістю конфліктує кожна тварина. Далі, поки не буде досягнуто допустимого розв’язку, на кожній ітерації прибираємо тварину, яка має найбільше конфліктів, після чого перераховуємо конфлікти, і, якщо їх немає, переходимо до включення в популяцію.<br>
<b>Крок 6.</b> Оновлення популяції.<br>
При оновленні популяції слід робити відсів 2-х найгірших розв’язків, щоб не працювати з поганими результатами. Для цього додамо отриманих нащадків в популяцію та оцінимо цільову функцію (кількість тварин в кожному наборі) для кожного члена популяції. Два найгірших результати видаляються з популяції. Якщо один з отриманих результатів є кращим за попередній рекорд, визначаємо новий рекорд. Якщо покращення не було впродовж 20 ітерацій, завершуємо роботу алгоритму.<br>